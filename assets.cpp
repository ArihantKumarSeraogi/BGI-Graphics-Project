#include "assets.h"
#include "graphics.h"
#include "cstdio"

namespace primitives
{


	Humanoid genHumanoid(Point p)
	{
		//restraints to be included to make sure the object is within the window limits
		Humanoid h1;
		int x, y, r;

		//head
		h1.head.center.x = p.x;
		h1.head.center.y = p.y;
		h1.head.radius = 40;
		circle(h1.head.center.x, h1.head.center.y, h1.head.radius);

		x = h1.head.center.x;
		y = h1.head.center.y;
		r = h1.head.radius;

		//neck
		h1.neck.tL.x = x - (r / 3);
		h1.neck.tL.y = y + r - 4;
		h1.neck.bR.x = x + (r / 3);
		h1.neck.bR.y = y + r + 20 - 4;
		rectangle(h1.neck.tL.x, h1.neck.tL.y, h1.neck.bR.x, h1.neck.bR.y);

		//torso
		h1.torso.tL.x = x - r;
		h1.torso.tL.y = y + r + 20 - 4;
		h1.torso.bR.x = x + r;
		h1.torso.bR.y = y + r + 20 + (2 * r + 20) - 4;
		rectangle(h1.torso.tL.x, h1.torso.tL.y, h1.torso.bR.x, h1.torso.bR.y);

		//rHand;
		//lHand;
		//rLeg;
		//lLeg;

		return h1; // returning reference to the humanoid type object generated by the function
	};

	Bow genBow(Point p)
	{
	        //https://www.cs.colorado.edu/~main/bgi/doc/arc.html
                //https://www.cs.colorado.edu/~main/bgi/doc/getarccoords.html
	        //restraints to be included to make sure the object is within the window limits
		Bow b1;
		int x=p.x;
		int y=p.y;
		int r=100;
		int midy;
     	        struct arccoordstype arcinfo;
        	setcolor(WHITE);


       		//bow
       		setlinestyle(0,0,7);  //set line style function is not for arcs but the thickness parameter works successfully
		arc(x,y,290,70,r);
 		getarccoords(&arcinfo);//fetching the endpoints of the last drawn arc
        	setcolor(BLUE);
    	   	setlinestyle(0,0,8);
     	        arc(x,y,350,10,r-1);
     	        arc(x,y,350,10,r-2);
     	        arc(x,y,350,10,r-3);
	        arc(x,y,350,10,r+3);
      	        arc(x,y,350,10,r+2);
                arc(x,y,350,10,r+1);



      		setlinestyle(0,0,5);
       	        line(arcinfo.xstart-1,arcinfo.ystart-5,arcinfo.xstart-1,arcinfo.ystart+5);
                line(arcinfo.xend-1,arcinfo.yend-5,arcinfo.xend-1,arcinfo.yend+5);
                midy =(arcinfo.ystart+5+arcinfo.yend-5)/2;
	
		//bow string
      		setlinestyle(0,0,1);
      		line(arcinfo.xstart,arcinfo.ystart+5,arcinfo.xstart,midy);
      		line(arcinfo.xend,midy,arcinfo.xend,arcinfo.yend-4);

      	 	//center of the circle to which the arc belongs to
      		b1.center.x = p.x;
     		b1.center.y = p.y;

       		//co-ordinates for upper part of the string
       	        b1.uString.src.x = arcinfo.xstart;
       		b1.uString.src.y = arcinfo.ystart+5;
      		b1.uString.dst.x = arcinfo.xstart;
      		b1.uString.dst.y = midy;

       		//co-ordinates for lower part of the string
       		b1.lString.src.x = arcinfo.xend;
        	b1.lString.src.y = midy;
     		b1.lString.dst.x = arcinfo.xend;
     		b1.lString.dst.y = arcinfo.yend-4;

       		return b1; // returning reference to the Bow type object generated by the function
	}

}

/*int main()                    //test humanoid
{
    initwindow(480,480);
    primitives::Humanoid h1;
    primitives::Point temp;
    printf(" enter x,y \n");
    scanf("%d%d",&temp.x,&temp.y);
    h1 = primitives::genHumanoid(temp);
    getch();
}*/

/*int main()                    //test bow
{
    initwindow(480,480);
    primitives::Bow b1;
    primitives::Point temp;
    printf(" enter x,y \n");
    scanf("%d%d",&temp.x,&temp.y);
    b1 = primitives::genBow(temp);
    getch();
}*/