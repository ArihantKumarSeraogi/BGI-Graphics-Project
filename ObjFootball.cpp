/*#include <iostream>
#include <windows.h>
#include <string>*/


//#include "assets.h"
#include "graphics.h"
#include "physics.h"
#include <cstdio>

namespace primitives
{
        Humanoid genHumanoid(const Point &p)
	{
		//restraints to be included to make sure the object is within the window limits
		Humanoid h1;
		int x, y, r;

		//head
		h1.head.center.x = p.x;
		h1.head.center.y = p.y;
		h1.head.radius = 40;
		circle(h1.head.center.x, h1.head.center.y, h1.head.radius);

		x = h1.head.center.x;
		y = h1.head.center.y;
		r = h1.head.radius;

		//neck
		h1.neck.tL.x = x - (r / 3);
		h1.neck.tL.y = y + r - 4;
		h1.neck.bR.x = x + (r / 3);
		h1.neck.bR.y = y + r + 20 - 4;
		rectangle(h1.neck.tL.x, h1.neck.tL.y, h1.neck.bR.x, h1.neck.bR.y);

		//torso
		h1.torso.tL.x = x - r;
		h1.torso.tL.y = y + r + 20 - 4;
		h1.torso.bR.x = x + r;
		h1.torso.bR.y = y + r + 20 + (2 * r + 20) - 4;
		rectangle(h1.torso.tL.x, h1.torso.tL.y, h1.torso.bR.x, h1.torso.bR.y);

		//rHand;
		//lHand;
		//rLeg;
		//lLeg;

		return h1; // returning reference to the humanoid type object generated by the function
	};
    void football(const Circle &ball)
    {

    Point point,poly1,poly2,poly3,poly4,poly5,poly6;
        setcolor(15); // Light Red
	circle(ball.center.x, ball.center.y, ball.radius); //Circle drawn

	poly1.x=ball.center.x-8;
	poly1.y=ball.center.y-(ball.radius-1);
	poly2.x=ball.center.x-4;
	poly2.y=ball.center.y-(ball.radius-8);
	poly3.x=ball.center.x+4;
	poly3.y=ball.center.y-(ball.radius-8);
	poly4.x=ball.center.x+8;
	poly4.y=ball.center.y-(ball.radius-1);
	int polygon2[8]={poly1.x,poly1.y,poly2.x,poly2.y,poly3.x,poly3.y,poly4.x,poly4.y};
	drawpoly(4,polygon2);

	poly1.x=ball.center.x+(ball.radius-1);
	poly1.y=ball.center.y-8;
	poly2.x=ball.center.x+(ball.radius-8);
	poly2.y=ball.center.y-4;
	poly3.x=ball.center.x+(ball.radius-8);
	poly3.y=ball.center.y+4;
	poly4.x=ball.center.x+(ball.radius-1);
	poly4.y=ball.center.y+8;

	int polygon3[8]={poly1.x,poly1.y,poly2.x,poly2.y,poly3.x,poly3.y,poly4.x,poly4.y};
	drawpoly(4,polygon3);


    poly1.x=ball.center.x-(ball.radius-1);
	poly1.y=ball.center.y-8;
	poly2.x=ball.center.x-(ball.radius-8);
	poly2.y=ball.center.y-4;
	poly3.x=ball.center.x-(ball.radius-8);
	poly3.y=ball.center.y+4;
	poly4.x=ball.center.x-(ball.radius-1);
	poly4.y=ball.center.y+8;

	int polygon4[8]={poly1.x,poly1.y,poly2.x,poly2.y,poly3.x,poly3.y,poly4.x,poly4.y};
	drawpoly(4,polygon4);

    poly1.x=ball.center.x-8;
	poly1.y=ball.center.y+(ball.radius-1);
	poly2.x=ball.center.x-4;
	poly2.y=ball.center.y+(ball.radius-8);
	poly3.x=ball.center.x+4;
	poly3.y=ball.center.y+(ball.radius-8);
	poly4.x=ball.center.x+8;
	poly4.y=ball.center.y+(ball.radius-1);
	int polygon5[8]={poly1.x,poly1.y,poly2.x,poly2.y,poly3.x,poly3.y,poly4.x,poly4.y};
	drawpoly(4,polygon5);

    setfillstyle(SOLID_FILL,LIGHTGRAY);
	floodfill(ball.center.x, ball.center.y,15);

    poly1.x=ball.center.x-4;
	poly1.y=ball.center.y-8;
	poly2.x=ball.center.x+4;
	poly2.y=ball.center.y-8;
	poly3.x=ball.center.x+8;
	poly3.y=ball.center.y;
	poly4.x=ball.center.x+4;
	poly4.y=ball.center.y+8;
	poly5.x=ball.center.x-4;
	poly5.y=ball.center.y+8;
	poly6.x=ball.center.x-8;
	poly6.y=ball.center.y;
	int polygon[14]={poly1.x,poly1.y,poly2.x,poly2.y,poly3.x,poly3.y,poly4.x,poly4.y,poly5.x,poly5.y,poly6.x,poly6.y,poly1.x,poly1.y};
	drawpoly(7,polygon);

	 setfillstyle(SOLID_FILL,RED);
	floodfill(ball.center.x, ball.center.y,15);

    }
	void Rods(const int &X,const int &Y)
	{
        	setcolor(15);
    		primitives :: Rectangle rod1,rod2;
    		rod1.tL.x = X;
        	rod1.tL.y = 0;
        	rod1.bR.y = Y;
        	rod1.bR.x = rod1.tL.x+50;
        	rod2.tL.x = rod1.tL.x;
        	rod2.bR.x = rod1.bR.x;
        	rod2.bR.y = getmaxy();
        	rod2.tL.y = rod1.bR.y+100;
        	rectangle(rod1.tL.x,rod1.tL.y,rod1.bR.x,rod1.bR.y);
        	rectangle(rod2.tL.x,rod2.tL.y,rod2.bR.x,rod2.bR.y);
	}

}
 /* int main()
{
    initwindow(480,480);
    primitives::Circle ball;
    std::cout << "Please enter the coordinates for the initial position of the ball (x,y)." << std::endl;
	std::cin >> ball.center.x >> ball.center.y;
	std::cout << "Please enter the radius of the ball." << std::endl;
	std::cin >> ball.radius;
    football(ball);
	system("pause");
}

/*int main()                    //test humanoid
{
    initwindow(480,480);
    primitives::Humanoid h1;
    primitives::Point temp;
    printf(" enter x,y \n");
    scanf("%d%d",&temp.x,&temp.y);
    h1 = primitives::genHumanoid(temp);
    getch();
}*/
